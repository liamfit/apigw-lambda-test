on:
  workflow_dispatch:

jobs:
  build:
    name: Build application
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
      
      - name: Setup SAM CLI 
        uses: aws-actions/setup-sam@v2
      
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: ${{ github.run_id }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build application
        run: sam build --use-container

      # Run Unit tests- Specify unit tests here 

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: aws-sam
          path: .aws-sam

  deploy-to-dev:
    name: Deploy to dev
    needs: build
    environment: dev
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: aws-sam
          path: .aws-sam

      - run: ls -la

      - name: Setup Python
        uses: actions/setup-python@v4
      
      - name: Setup SAM CLI 
        uses: aws-actions/setup-sam@v2
      
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: ${{ github.run_id }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get terraform.tfvars.json from SSM
        run: >
          aws ssm get-parameter
          --with-decryption
          --name terraform.tfvars.json
          --query 'Parameter.Value'
          --output text
          > terraform.tfvars.json

      - name: Get deployment region
        run: echo "DEPLOYMENT_REGION=$(jq -r .region terraform.tfvars.json)" >> $GITHUB_ENV

      - name: Get deployment account number
        run: echo "DEPLOYMENT_ACCOUNT=$(jq -r .accounts.dev terraform.tfvars.json)" >> $GITHUB_ENV

      - name: Get deployment role
        run: echo "DEPLOYMENT_ROLE=$(jq -r .github_role_name terraform.tfvars.json)" >> $GITHUB_ENV

      - run: aws sts get-caller-identity

      - name: Assume deployment role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.DEPLOYMENT_REGION }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: "arn:aws:iam::${{ env.DEPLOYMENT_ACCOUNT }}:role/${{ env.DEPLOYMENT_ROLE }}"
          role-skip-session-tagging: true
          role-duration-seconds: 1200

      - run: aws sts get-caller-identity

      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name sam-hello-world --capabilities CAPABILITY_IAM --resolve-s3 --region ${DEPLOYMENT_REGION}